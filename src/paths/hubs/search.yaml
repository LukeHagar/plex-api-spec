get:
  tags:
    - Search
  summary: Perform a search
  operationId: performSearch
  description: |
    This endpoint performs a search across all library sections, or a single section, and returns matches as hubs, split up by type. It performs spell checking, looks for partial matches, and orders the hubs based on quality of results. In addition, based on matches, it will return other related matches (e.g. for a genre match, it may return movies in that genre, or for an actor match, movies with that actor).

    In the response's items, the following extra attributes are returned to further describe or disambiguate the result:

    - `reason`: The reason for the result, if not because of a direct search term match; can be either:
      - `section`: There are multiple identical results from different sections.
      - `originalTitle`: There was a search term match from the original title field (sometimes those can be very different or in a foreign language).
      - `<hub identifier>`: If the reason for the result is due to a result in another hub, the source hub identifier is returned. For example, if the search is for "dylan" then Bob Dylan may be returned as an artist result, an a few of his albums returned as album results with a reason code of `artist` (the identifier of that particular hub). Or if the search is for "arnold", there might be movie results returned with a reason of `actor`
    - `reasonTitle`: The string associated with the reason code. For a section reason, it'll be the section name; For a hub identifier, it'll be a string associated with the match (e.g. `Arnold Schwarzenegger` for movies which were returned because the search was for "arnold").
    - `reasonID`: The ID of the item associated with the reason for the result. This might be a section ID, a tag ID, an artist ID, or a show ID.

    This request is intended to be very fast, and called as the user types.
  parameters:
    - name: query
      description: The query term
      in: query
      schema:
        type: string
        examples:
          - "arnold"
          - "dylan"
      required: true
    - name: sectionId
      description: This gives context to the search, and can result in re-ordering of search result hubs
      in: query
      schema:
        type: number
      required: false
    - name: limit
      description: The number of items to return per hub
      in: query
      schema:
        type: number
        example: 5
        default: 3

  responses:
    "200":
      description: A collection of hubs containing search results relevant to the query
      content:
        application/json:
          schema:
            type: object
            properties:
              MediaContainer:
                allOf:
                  - $ref: "../../models/media-container/size.yaml"
                  - type: object
                    properties:
                      Hub:
                        type: array
                        description: |
                          A collection of items, logically grouped by their content type.
                          `Directory` and `Metadata` are mutually exclusive or nullable, (if `size` is 0, neither will be present).
                        items:
                          $ref: "../../models/hub/Hub.yaml"
                    additionalProperties: true
    "400":
      $ref: "../../responses/400.yaml"
    "401":
      $ref: "../../responses/401.yaml"
