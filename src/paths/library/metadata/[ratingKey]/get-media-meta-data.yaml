get:
  tags:
    - Library
  summary: Get Media Metadata
  description: |
    This endpoint will return all the (meta)data of one or more library items specified by the ratingKey.
    Multiple rating keys can be provided as a comma-separated list (e.g., "21119,21617").
  operationId: get-media-meta-data
  parameters:
    - name: ratingKey
      in: path
      description: The id(s) of the library item(s) to return metadata for. Can be a single ID or comma-separated list of IDs.
      schema:
        type: string
        pattern: "^[0-9]+(,[0-9]+)*$"
        example: "21119,21617"
      required: true
    - name: includeConcerts
      in: query
      description: "Include concerts data if set to true."
      required: false
      schema:
        type: boolean
        example: true
    - name: includeExtras
      in: query
      description: "Include extra content (e.g. bonus features)."
      required: false
      schema:
        type: boolean
        example: true
    - name: includeOnDeck
      in: query
      description: "Include on-deck items."
      required: false
      schema:
        type: boolean
        example: true
    - name: includePopularLeaves
      in: query
      description: "Include popular leaves (episodes/chapters)."
      required: false
      schema:
        type: boolean
        example: true
    - name: includePreferences
      in: query
      description: "Include preferences information."
      required: false
      schema:
        type: boolean
        example: true
    - name: includeReviews
      in: query
      description: "Include reviews for the content."
      required: false
      schema:
        type: boolean
        example: true
    - name: includeChapters
      in: query
      description: "Include chapter details."
      required: false
      schema:
        type: boolean
        example: true
    - name: includeStations
      in: query
      description: "Include station data."
      required: false
      schema:
        type: boolean
        example: true
    - name: includeExternalMedia
      in: query
      description: "Include external media data."
      required: false
      schema:
        type: boolean
        example: true
    - name: asyncAugmentMetadata
      in: query
      description: "Trigger asynchronous metadata augmentation."
      required: false
      schema:
        type: boolean
        example: true
    - name: asyncCheckFiles
      in: query
      description: "Trigger asynchronous file checking."
      required: false
      schema:
        type: boolean
        example: true
    - name: asyncRefreshAnalysis
      in: query
      description: "Trigger asynchronous refresh of analysis."
      required: false
      schema:
        type: boolean
        example: true
    - name: asyncRefreshLocalMediaAgent
      in: query
      description: "Trigger asynchronous refresh of the local media agent."
      required: false
      schema:
        type: boolean
        example: true
  responses:
    "200":
      description: The metadata of the library item.
      content:
        application/json:
          schema:
            type: object
            properties:
              MediaContainer:
                allOf:
                  - $ref: "../../../../models/media-container/size.yaml"
                  - $ref: "../../../../models/media-container/allow-sync.yaml"
                  - $ref: "../../../../models/media-container/identifier.yaml"
                  - $ref: "../../../../models/media-container/library-section-id.yaml"
                  - $ref: "../../../../models/media-container/library-section-title.yaml"
                  - $ref: "../../../../models/media-container/library-section-uuid.yaml"
                  - $ref: "../../../../models/media-container/media-tag-prefix.yaml"
                  - $ref: "../../../../models/media-container/media-tag-version.yaml"
                  - type: object
                    required:
                      - Metadata
                    properties:
                      Metadata:
                        type: array
                        description: "An array of metadata items."
                        items:
                          required:
                            - type
                          allOf:
                            - $ref: "../../../../models/meta-data/rating-key.yaml"
                            - $ref: "../../../../models/meta-data/key.yaml"
                            - $ref: "../../../../models/meta-data/guid.yaml"
                            - $ref: "../../../../models/meta-data/slug.yaml"
                            - $ref: "../../../../models/meta-data/studio.yaml"
                            - $ref: "../../../../models/meta-data/type.yaml"
                            - $ref: "../../../../models/meta-data/title.yaml"
                            - $ref: "../../../../models/meta-data/title-sort.yaml"
                            - $ref: "../../../../models/meta-data/content-rating.yaml"
                            - $ref: "../../../../models/meta-data/summary.yaml"
                            - $ref: "../../../../models/meta-data/rating.yaml"
                            - $ref: "../../../../models/meta-data/audience-rating.yaml"
                            - $ref: "../../../../models/meta-data/year.yaml"
                            - $ref: "../../../../models/meta-data/tagline.yaml"
                            - $ref: "../../../../models/meta-data/thumb.yaml"
                            - $ref: "../../../../models/meta-data/art.yaml"
                            - $ref: "../../../../models/meta-data/theme.yaml"
                            - $ref: "../../../../models/meta-data/index.yaml"
                            - $ref: "../../../../models/meta-data/leaf-count.yaml"
                            - $ref: "../../../../models/meta-data/viewed-leaf-count.yaml"
                            - $ref: "../../../../models/meta-data/child-count.yaml"
                            - $ref: "../../../../models/meta-data/season-count.yaml"
                            - $ref: "../../../../models/meta-data/duration.yaml"
                            - $ref: "../../../../models/meta-data/originally-available-at.yaml"
                            - $ref: "../../../../models/meta-data/added-at.yaml"
                            - $ref: "../../../../models/meta-data/updated-at.yaml"
                            - $ref: "../../../../models/meta-data/audience-rating-image.yaml"
                            - $ref: "../../../../models/meta-data/chapter-source.yaml"
                            - $ref: "../../../../models/meta-data/primary-extra-key.yaml"
                            - $ref: "../../../../models/meta-data/original-title.yaml"
                            - $ref: "../../../../models/meta-data/parent-rating-key.yaml"
                            - $ref: "../../../../models/meta-data/grandparent-rating-key.yaml"
                            - $ref: "../../../../models/meta-data/parent-guid.yaml"
                            - $ref: "../../../../models/meta-data/grandparent-guid.yaml"
                            - $ref: "../../../../models/meta-data/grandparent-slug.yaml"
                            - $ref: "../../../../models/meta-data/grandparent-key.yaml"
                            - $ref: "../../../../models/meta-data/parent-key.yaml"
                            - $ref: "../../../../models/meta-data/grandparent-title.yaml"
                            - $ref: "../../../../models/meta-data/grandparent-thumb.yaml"
                            - $ref: "../../../../models/meta-data/grandparent-theme.yaml"
                            - $ref: "../../../../models/meta-data/grandparent-art.yaml"
                            - $ref: "../../../../models/meta-data/parent-title.yaml"
                            - $ref: "../../../../models/meta-data/parent-index.yaml"
                            - $ref: "../../../../models/meta-data/parent-thumb.yaml"
                            - $ref: "../../../../models/meta-data/rating-image.yaml"
                            - $ref: "../../../../models/meta-data/view-count.yaml"
                            - $ref: "../../../../models/meta-data/view-offset.yaml"
                            - $ref: "../../../../models/meta-data/skip-count.yaml"
                            - $ref: "../../../../models/meta-data/subtype.yaml"
                            - $ref: "../../../../models/meta-data/last-rated-at.yaml"
                            - $ref: "../../../../models/meta-data/created-at-accuracy.yaml"
                            - $ref: "../../../../models/meta-data/created-at-tz-offset.yaml"
                            - $ref: "../../../../models/meta-data/last-viewed-at.yaml"
                            - $ref: "../../../../models/meta-data/user-rating.yaml"
                            - $ref: "../../../../models/meta-data/objects/image.yaml"
                            - $ref: "../../../../models/meta-data/objects/ultra-blur-colors.yaml"
                            - $ref: "../../../../models/meta-data/library-section-id.yaml"
                            - $ref: "../../../../models/meta-data/library-section-title.yaml"
                            - $ref: "../../../../models/meta-data/library-section-key.yaml"
                            - $ref: "../../../../models/meta-data/guid/guid-array.yaml"
                            - type: object
                              properties:
                                Media:
                                  allOf:
                                    - $ref: "../../../../models/Media-data.yaml"
                                Genre:
                                  type: array
                                  items:
                                    allOf:
                                      - $ref: "../../../../models/genre/id.yaml"
                                      - $ref: "../../../../models/genre/tag.yaml"
                                      - $ref: "../../../../models/genre/filter.yaml"
                                Country:
                                  type: array
                                  items:
                                    allOf:
                                      - $ref: "../../../../models/country/id.yaml"
                                      - $ref: "../../../../models/country/tag.yaml"
                                      - $ref: "../../../../models/country/filter.yaml"
                                Director:
                                  type: array
                                  items:
                                    allOf:
                                      - $ref: "../../../../models/director/id.yaml"
                                      - $ref: "../../../../models/director/tag.yaml"
                                      - $ref: "../../../../models/director/filter.yaml"
                                      - $ref: "../../../../models/director/tag-key.yaml"
                                      - $ref: "../../../../models/director/thumb.yaml"
                                Writer:
                                  type: array
                                  items:
                                    allOf:
                                      - $ref: "../../../../models/writer/id.yaml"
                                      - $ref: "../../../../models/writer/tag.yaml"
                                      - $ref: "../../../../models/writer/filter.yaml"
                                      - $ref: "../../../../models/writer/thumb.yaml"
                                      - $ref: "../../../../models/writer/tag-key.yaml"
                                Producer:
                                  type: array
                                  items:
                                    allOf:
                                      - $ref: "../../../../models/meta-data/role.yaml"
                                Role:
                                  type: array
                                  items:
                                    allOf:
                                      - $ref: "../../../../models/role/id.yaml"
                                      - $ref: "../../../../models/role/tag.yaml"
                                      - $ref: "../../../../models/role/role.yaml"
                                      - $ref: "../../../../models/role/filter.yaml"
                                      - $ref: "../../../../models/role/tag-key.yaml"
                                      - $ref: "../../../../models/role/thumb.yaml"
                                Rating:
                                  x-speakeasy-name-override: Ratings
                                  type: array
                                  items:
                                    type: object
                                    required:
                                      - image
                                      - value
                                      - type
                                    properties:
                                      image:
                                        type: string
                                        description: "The image or reference for the rating."
                                        example: "imdb://image.rating"
                                      value:
                                        type: number
                                        format: float
                                        description: "The rating value."
                                        example: 9.0
                                      type:
                                        type: string
                                        description: "The type of rating (e.g., audience, critic)."
                                        example: "audience"
                                Similar:
                                  type: array
                                  items:
                                    type: object
                                    required:
                                      - id
                                      - filter
                                      - tag
                                    properties:
                                      id:
                                        type: integer
                                        description: "The unique similar item identifier."
                                        example: 26
                                      filter:
                                        type: string
                                        description: "The filter string for similar items."
                                        example: "similar=26"
                                      tag:
                                        type: string
                                        description: "The tag or title of the similar content."
                                        example: "Breaking Bad"
                                Location:
                                  type: array
                                  items:
                                    type: object
                                    required:
                                      - path
                                    properties:
                                      path:
                                        type: string
                                        description: "The file path for the location."
                                        example: "/TV Shows/Better Call Saul"
                                Chapter:
                                  type: array
                                  items:
                                    allOf:
                                      - $ref: "../../../../models/chapter/id.yaml"
                                      - $ref: "../../../../models/chapter/filter.yaml"
                                      - $ref: "../../../../models/chapter/index.yaml"
                                      - $ref: "../../../../models/chapter/start-time-offset.yaml"
                                      - $ref: "../../../../models/chapter/end-time-offset.yaml"
                                      - $ref: "../../../../models/chapter/thumb.yaml"
                                Marker:
                                  type: array
                                  items:
                                    allOf:
                                      - $ref: "../../../../models/marker/id.yaml"
                                      - $ref: "../../../../models/marker/type.yaml"
                                      - $ref: "../../../../models/marker/start-time-offset.yaml"
                                      - $ref: "../../../../models/marker/end-time-offset.yaml"
                                      - $ref: "../../../../models/marker/final.yaml"
                                      - type: object
                                        properties:
                                          Attributes:
                                            $ref: "../../../../models/marker/attributes.yaml"
                                Extras:
                                  type: object
                                  properties:
                                    size:
                                      type: integer
                                      description: "The size of the extras."
                                      example: 1
    "400":
      $ref: "../../../../responses/400.yaml"
    "401":
      $ref: "../../../../responses/401.yaml"
    "404":
      $ref: "../../../../responses/404-html.yaml"
