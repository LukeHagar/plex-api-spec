get:
  tags:
    - Library
  summary: Get Library Items
  operationId: get-library-items
  description: |
    Fetches details from a specific section of the library identified by a section key and a tag. The tag parameter accepts the following values:
    - `all`: All items in the section.
    - `unwatched`: Items that have not been played.
    - `newest`: Items that are recently released.
    - `recentlyAdded`: Items that are recently added to the library.
    - `recentlyViewed`: Items that were recently viewed.
    - `onDeck`: Items to continue watching.
    - `collection`: Items categorized by collection.
    - `edition`: Items categorized by edition.
    - `genre`: Items categorized by genre.
    - `year`: Items categorized by year of release.
    - `decade`: Items categorized by decade.
    - `director`: Items categorized by director.
    - `actor`: Items categorized by starring actor.
    - `country`: Items categorized by country of origin.
    - `contentRating`: Items categorized by content rating.
    - `rating`: Items categorized by rating.
    - `resolution`: Items categorized by resolution.
    - `firstCharacter`: Items categorized by the first letter.
    - `folder`: Items categorized by folder.
    - `albums`: Items categorized by album.
  parameters:
    - name: tag
      in: path
      required: true
      description: A key representing a specific tag within the section.
      schema:
        type: string
        x-speakeasy-unknown-values: allow
        enum:
          - unwatched
          - newest
          - recentlyAdded
          - recentlyViewed
          - onDeck
          - collection
          - edition
          - year
          - decade
          - director
          - contentRating
          - rating
          - resolution
          - firstCharacter
          - folder
          - albums
    - name: includeGuids
      in: query
      description: |
        Adds the Guids object to the response
      schema:
        $ref: "../../../../models/common/PlexBoolean.yaml"

    - $ref: "../../../../parameters/type.yaml"
    - $ref: "../../../../parameters/library/section-key.yaml"
    - $ref: "../../../../parameters/include-meta.yaml"
    - $ref: "../../../../parameters/container-start.yaml"
    - $ref: "../../../../parameters/container-size.yaml"
    - $ref: "../../../../parameters/accept-application-json.yaml"
  responses:
    "200":
      description: The contents of the library by section and tag
      content:
        application/json:
          schema:
            type: object
            properties:
              MediaContainer:
                allOf:
                  - $ref: "../../../../models/media-container/size.yaml"
                  - $ref: "../../../../models/media-container/total-size.yaml"
                  - $ref: "../../../../models/media-container/offset.yaml"
                  - $ref: "../../../../models/media-container/content.yaml"
                  - $ref: "../../../../models/media-container/allow-sync.yaml"
                  - $ref: "../../../../models/media-container/nocache.yaml"
                  - $ref: "../../../../models/media-container/art.yaml"
                  - $ref: "../../../../models/media-container/identifier.yaml"
                  - $ref: "../../../../models/media-container/library-section-id.yaml"
                  - $ref: "../../../../models/media-container/library-section-title.yaml"
                  - $ref: "../../../../models/media-container/library-section-uuid.yaml"
                  - $ref: "../../../../models/media-container/media-tag-prefix.yaml"
                  - $ref: "../../../../models/media-container/media-tag-version.yaml"
                  - $ref: "../../../../models/media-container/thumb.yaml"
                  - $ref: "../../../../models/media-container/title1.yaml"
                  - $ref: "../../../../models/media-container/title2.yaml"
                  - $ref: "../../../../models/media-container/view-group.yaml"
                  - $ref: "../../../../models/media-container/view-mode.yaml"
                  - $ref: "../../../../models/media-container/mixed-parents.yaml"
                  - type: object
                    required:
                      - Metadata
                    properties:
                      Metadata:
                        type: array
                        description: "An array of metadata items."
                        items:
                          required:
                            - type
                          allOf:
                            - $ref: "../../../../models/meta-data/rating-key.yaml"
                            - $ref: "../../../../models/meta-data/key.yaml"
                            - $ref: "../../../../models/meta-data/guid.yaml"
                            - $ref: "../../../../models/meta-data/slug.yaml"
                            - $ref: "../../../../models/meta-data/studio.yaml"
                            - $ref: "../../../../models/meta-data/type.yaml"
                            - $ref: "../../../../models/meta-data/title.yaml"
                            - $ref: "../../../../models/meta-data/banner.yaml"
                            - $ref: "../../../../models/meta-data/title-sort.yaml"
                            - $ref: "../../../../models/meta-data/content-rating.yaml"
                            - $ref: "../../../../models/meta-data/summary.yaml"
                            - $ref: "../../../../models/meta-data/rating.yaml"
                            - $ref: "../../../../models/meta-data/audience-rating.yaml"
                            - $ref: "../../../../models/meta-data/year.yaml"
                            - $ref: "../../../../models/meta-data/tagline.yaml"
                            - $ref: "../../../../models/meta-data/thumb.yaml"
                            - $ref: "../../../../models/meta-data/art.yaml"
                            - $ref: "../../../../models/meta-data/theme.yaml"
                            - $ref: "../../../../models/meta-data/index.yaml"
                            - $ref: "../../../../models/meta-data/leaf-count.yaml"
                            - $ref: "../../../../models/meta-data/viewed-leaf-count.yaml"
                            - $ref: "../../../../models/meta-data/child-count.yaml"
                            - $ref: "../../../../models/meta-data/season-count.yaml"
                            - $ref: "../../../../models/meta-data/duration.yaml"
                            - $ref: "../../../../models/meta-data/originally-available-at.yaml"
                            - $ref: "../../../../models/meta-data/added-at.yaml"
                            - $ref: "../../../../models/meta-data/updated-at.yaml"
                            - $ref: "../../../../models/meta-data/audience-rating-image.yaml"
                            - $ref: "../../../../models/meta-data/chapter-source.yaml"
                            - $ref: "../../../../models/meta-data/primary-extra-key.yaml"
                            - $ref: "../../../../models/meta-data/original-title.yaml"
                            - $ref: "../../../../models/meta-data/parent-rating-key.yaml"
                            - $ref: "../../../../models/meta-data/grandparent-rating-key.yaml"
                            - $ref: "../../../../models/meta-data/parent-guid.yaml"
                            - $ref: "../../../../models/meta-data/grandparent-guid.yaml"
                            - $ref: "../../../../models/meta-data/grandparent-slug.yaml"
                            - $ref: "../../../../models/meta-data/grandparent-key.yaml"
                            - $ref: "../../../../models/meta-data/parent-key.yaml"
                            - $ref: "../../../../models/meta-data/grandparent-title.yaml"
                            - $ref: "../../../../models/meta-data/grandparent-thumb.yaml"
                            - $ref: "../../../../models/meta-data/grandparent-theme.yaml"
                            - $ref: "../../../../models/meta-data/grandparent-art.yaml"
                            - $ref: "../../../../models/meta-data/parent-title.yaml"
                            - $ref: "../../../../models/meta-data/parent-index.yaml"
                            - $ref: "../../../../models/meta-data/parent-thumb.yaml"
                            - $ref: "../../../../models/meta-data/rating-image.yaml"
                            - $ref: "../../../../models/meta-data/view-count.yaml"
                            - $ref: "../../../../models/meta-data/view-offset.yaml"
                            - $ref: "../../../../models/meta-data/skip-count.yaml"
                            - $ref: "../../../../models/meta-data/subtype.yaml"
                            - $ref: "../../../../models/meta-data/last-rated-at.yaml"
                            - $ref: "../../../../models/meta-data/created-at-accuracy.yaml"
                            - $ref: "../../../../models/meta-data/created-at-tz-offset.yaml"
                            - $ref: "../../../../models/meta-data/last-viewed-at.yaml"
                            - $ref: "../../../../models/meta-data/user-rating.yaml"
                            - $ref: "../../../../models/meta-data/objects/image.yaml"
                            - $ref: "../../../../models/meta-data/objects/ultra-blur-colors.yaml"
                            - $ref: "../../../../models/meta-data/guid/guid-array.yaml"
                            - $ref: "../../../../models/meta-data/library-section-id.yaml"
                            - $ref: "../../../../models/meta-data/library-section-title.yaml"
                            - $ref: "../../../../models/meta-data/library-section-key.yaml"
                            - $ref: "../../../../models/meta-data/show-ordering.yaml"
                            - $ref: "../../../../models/meta-data/flatten-seasons.yaml"
                            - $ref: "../../../../models/meta-data/skip-children.yaml"
                            - type: object
                              properties:
                                Media:
                                  type: array
                                  items:
                                    allOf:
                                      - $ref: "../../../../models/media/id.yaml"
                                      - $ref: "../../../../models/media/duration.yaml"
                                      - $ref: "../../../../models/media/bitrate.yaml"
                                      - $ref: "../../../../models/media/width.yaml"
                                      - $ref: "../../../../models/media/height.yaml"
                                      - $ref: "../../../../models/media/aspect-ratio.yaml"
                                      - $ref: "../../../../models/media/audio-channels.yaml"
                                      - $ref: "../../../../models/media/display-offset.yaml"
                                      - $ref: "../../../../models/media/audio-codec.yaml"
                                      - $ref: "../../../../models/media/video-codec.yaml"
                                      - $ref: "../../../../models/media/video-resolution.yaml"
                                      - $ref: "../../../../models/media/container.yaml"
                                      - $ref: "../../../../models/media/video-frame-rate.yaml"
                                      - $ref: "../../../../models/media/video-profile.yaml"
                                      - $ref: "../../../../models/media/has-voice-activity.yaml"
                                      - $ref: "../../../../models/media/audio-profile.yaml"
                                      - $ref: "../../../../models/media/optimized-for-streaming.yaml"
                                      - $ref: "../../../../models/media/has-64bit-offsets.yaml"
                                      - type: object
                                        properties:
                                          Part:
                                            type: array
                                            items:
                                              allOf:
                                                - $ref: "../../../../models/media/part/accessible.yaml"
                                                - $ref: "../../../../models/media/part/exists.yaml"
                                                - $ref: "../../../../models/media/part/id.yaml"
                                                - $ref: "../../../../models/media/part/key.yaml"
                                                - $ref: "../../../../models/media/part/indexes.yaml"
                                                - $ref: "../../../../models/media/part/duration.yaml"
                                                - $ref: "../../../../models/media/part/file.yaml"
                                                - $ref: "../../../../models/media/part/size.yaml"
                                                - $ref: "../../../../models/media/part/packet-length.yaml"
                                                - $ref: "../../../../models/media/part/container.yaml"
                                                - $ref: "../../../../models/media/part/video-profile.yaml"
                                                - $ref: "../../../../models/media/part/audio-profile.yaml"
                                                - $ref: "../../../../models/media/part/has-64bit-offsets.yaml"
                                                - $ref: "../../../../models/media/part/optimized-for-streaming.yaml"
                                                - $ref: "../../../../models/media/part/has-thumbnail.yaml"
                                Genre:
                                  type: array
                                  items:
                                    allOf:
                                      - $ref: "../../../../models/genre/id.yaml"
                                      - $ref: "../../../../models/genre/tag.yaml"
                                Country:
                                  type: array
                                  items:
                                    allOf:
                                      - $ref: "../../../../models/country/id.yaml"
                                      - $ref: "../../../../models/country/tag.yaml"
                                Director:
                                  type: array
                                  items:
                                    allOf:
                                      - $ref: "../../../../models/director/id.yaml"
                                      - $ref: "../../../../models/director/tag.yaml"
                                      - $ref: "../../../../models/director/thumb.yaml"
                                Writer:
                                  type: array
                                  items:
                                    allOf:
                                      - $ref: "../../../../models/writer/id.yaml"
                                      - $ref: "../../../../models/writer/tag.yaml"
                                      - $ref: "../../../../models/writer/thumb.yaml"
                                Producer:
                                  type: array
                                  items:
                                    allOf:
                                      - $ref: "../../../../models/meta-data/role.yaml"
                                Collection:
                                  type: array
                                  items:
                                    allOf:
                                      - $ref: "../../../../models/collection/tag.yaml"
                                Role:
                                  type: array
                                  items:
                                    allOf:
                                      - $ref: "../../../../models/role/id.yaml"
                                      - $ref: "../../../../models/role/tag.yaml"
                                      - $ref: "../../../../models/role/role.yaml"
                                      - $ref: "../../../../models/role/thumb.yaml"
                                Rating:
                                  x-speakeasy-name-override: Ratings
                                  type: array
                                  items:
                                    type: object
                                    required:
                                      - image
                                      - value
                                      - type
                                    properties:
                                      image:
                                        type: string
                                        description: "The image or reference for the rating."
                                        example: "imdb://image.rating"
                                      value:
                                        type: number
                                        format: float
                                        description: "The rating value."
                                        example: 9.0
                                      type:
                                        type: string
                                        description: "The type of rating (e.g., audience, critic)."
                                        example: "audience"
                                Similar:
                                  type: array
                                  items:
                                    type: object
                                    required:
                                      - id
                                      - filter
                                      - tag
                                    properties:
                                      id:
                                        type: integer
                                        description: "The unique similar item identifier."
                                        example: 26
                                      filter:
                                        type: string
                                        description: "The filter string for similar items."
                                        example: "similar=26"
                                      tag:
                                        type: string
                                        description: "The tag or title of the similar content."
                                        example: "Breaking Bad"
                                Location:
                                  type: array
                                  items:
                                    type: object
                                    required:
                                      - path
                                    properties:
                                      path:
                                        type: string
                                        description: "The file path for the location."
                                        example: "/TV Shows/Better Call Saul"
                                Chapter:
                                  type: array
                                  items:
                                    allOf:
                                      - $ref: "../../../../models/chapter/id.yaml"
                                      - $ref: "../../../../models/chapter/filter.yaml"
                                      - $ref: "../../../../models/chapter/index.yaml"
                                      - $ref: "../../../../models/chapter/start-time-offset.yaml"
                                      - $ref: "../../../../models/chapter/end-time-offset.yaml"
                                      - $ref: "../../../../models/chapter/thumb.yaml"
                                Marker:
                                  type: array
                                  items:
                                    allOf:
                                      - $ref: "../../../../models/marker/id.yaml"
                                      - $ref: "../../../../models/marker/type.yaml"
                                      - $ref: "../../../../models/marker/start-time-offset.yaml"
                                      - $ref: "../../../../models/marker/end-time-offset.yaml"
                                      - $ref: "../../../../models/marker/final.yaml"
                                      - type: object
                                        properties:
                                          Attributes:
                                            $ref: "../../../../models/marker/attributes.yaml"
                                Extras:
                                  type: object
                                  properties:
                                    size:
                                      type: integer
                                      description: "The size of the extras."
                                      example: 1
                      Meta:
                        description: |
                          The Meta object is only included in the response if the `includeMeta` parameter is set to `1`.
                        type: object
                        properties:
                          Type:
                            type: array
                            items:
                              type: object
                              required:
                                - key
                                - type
                                - title
                                - active
                              properties:
                                key:
                                  type: string
                                  example: "/library/sections/2/all?type=2"
                                type:
                                  type: string
                                  example: "show"
                                title:
                                  type: string
                                  example: "TV Shows"
                                active:
                                  type: boolean
                                  example: false
                                Filter:
                                  type: array
                                  items:
                                    type: object
                                    required:
                                      - filter
                                      - filterType
                                      - key
                                      - title
                                      - type
                                    properties:
                                      filter:
                                        type: string
                                        example: "genre"
                                      filterType:
                                        type: string
                                        example: "string"
                                      key:
                                        type: string
                                        example: "/library/sections/2/genre?type=2"
                                      title:
                                        type: string
                                        example: "Genre"
                                      type:
                                        type: string
                                        example: "filter"
                                Sort:
                                  type: array
                                  items:
                                    type: object
                                    required:
                                      - key
                                      - title
                                      - defaultDirection
                                    properties:
                                      default:
                                        type: string
                                        example: "asc"
                                      active:
                                        type: boolean
                                        example: false
                                      activeDirection:
                                        $ref: "../../../../models/common/PlexSortDirection.yaml"
                                      defaultDirection:
                                        $ref: "../../../../models/common/PlexSortDirection.yaml"
                                      descKey:
                                        type: string
                                        example: "titleSort:desc"
                                      firstCharacterKey:
                                        type: string
                                        example: "/library/sections/2/firstCharacter"
                                      key:
                                        type: string
                                        example: "titleSort"
                                      title:
                                        type: string
                                        example: "Title"
                                Field:
                                  type: array
                                  items:
                                    type: object
                                    required:
                                      - key
                                      - title
                                      - type
                                    properties:
                                      key:
                                        type: string
                                        example: "show.title"
                                      title:
                                        type: string
                                        example: "Show Title"
                                      type:
                                        type: string
                                        example: "string"
                                      subType:
                                        type: string
                                        example: "rating"
                          FieldType:
                            type: array
                            items:
                              type: object
                              required:
                                - type
                                - Operator
                              properties:
                                type:
                                  type: string
                                  example: "tag"
                                Operator:
                                  type: array
                                  items:
                                    type: object
                                    required:
                                      - key
                                      - title
                                    properties:
                                      key:
                                        type: string
                                        example: "="
                                      title:
                                        type: string
                                        example: "is"

    "400":
      $ref: "../../../../responses/400.yaml"
    "401":
      $ref: "../../../../responses/401.yaml"
