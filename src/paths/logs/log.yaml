get:
  tags:
    - Log
  summary: Logging a single line message.
  description: |
    This endpoint will write a single-line log message, including a level and source to the main Plex Media Server log.
  operationId: logLine
  parameters:
    - name: level
      description: |
        An integer log level to write to the PMS log with.
        0: Error
        1: Warning
        2: Info
        3: Debug
        4: Verbose
      in: query
      schema:
        type: integer
        x-speakeasy-unknown-values: allow
        enum:
          - 0
          - 1
          - 2
          - 3
          - 4
      required: true
    - name: message
      description: The text of the message to write to the log.
      in: query
      schema:
        type: string
        example: Test log message
      required: true
    - name: source
      description: a string indicating the source of the message.
      in: query
      schema:
        type: string
        example: Postman
      required: true

  responses:
    "200":
      description: Log Message Posted successfully
    "400":
      $ref: "../../responses/400.yaml"
    "401":
      $ref: "../../responses/401.yaml"

post:
  tags:
    - Log
  summary: Logging a multi-line message
  description: |
    This endpoint allows for the batch addition of log entries to the main Plex Media Server log.
    It accepts a text/plain request body, where each line represents a distinct log entry.
    Each log entry consists of URL-encoded key-value pairs, specifying log attributes such as 'level', 'message', and 'source'.

    Log entries are separated by a newline character (`\n`).
    Each entry's parameters should be URL-encoded to ensure accurate parsing and handling of special characters.
    This method is efficient for logging multiple entries in a single API call, reducing the overhead of multiple individual requests.

    The 'level' parameter specifies the log entry's severity or importance, with the following integer values:
    - `0`: Error - Critical issues that require immediate attention.
    - `1`: Warning - Important events that are not critical but may indicate potential issues.
    - `2`: Info - General informational messages about system operation.
    - `3`: Debug - Detailed information useful for debugging purposes.
    - `4`: Verbose - Highly detailed diagnostic information for in-depth analysis.

    The 'message' parameter contains the log text, and 'source' identifies the log message's origin (e.g., an application name or module).

    Example of a single log entry format:
    `level=4&message=Sample%20log%20entry&source=applicationName`

    Ensure each parameter is properly URL-encoded to avoid interpretation issues.

  operationId: logMultiLine
  requestBody:
    required: true
    content:
      text/plain:
        schema:
          type: string
          example: "level=4&message=Test%20message%201&source=postman\nlevel=3&message=Test%20message%202&source=postman\nlevel=1&message=Test%20message%203&source=postman"
  responses:
    "200":
      description: Multi-Line Log Message Posted successfully
    "400":
      $ref: "../../responses/400.yaml"
    "401":
      $ref: "../../responses/401.yaml"
