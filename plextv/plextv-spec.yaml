openapi: 3.1.0
info:
  title: Plex-API
  summary: A Plex.TV API Map
  description: An Open API Spec for interacting with Plex.tv
  version: 0.0.3
  contact:
    name: Luke Hagar
    url: "https://www.LukeHagar.com"
    email: Lukeslakemail@gmail.com
  license:
    name: MIT
    identifier: MIT

servers:
  - url: https://plex.tv/api/v2

security:
  - Token: []
    ClientIdentifier: []
    Device: []
    DeviceName: []
    Platform: []
    PlatformVersion: []
    Product: []
    Version: []

components:
  securitySchemes:
    Token: # arbitrary name for the security scheme
      description: Plex Authentication Token
      type: apiKey
      in: header # can be "header", "query" or "cookie"
      name: X-Plex-Token # name of the header, query parameter or cookie
    ClientIdentifier: # arbitrary name for the security scheme
      description: Plex Authentication Token
      type: apiKey
      in: header # can be "header", "query" or "cookie"
      name: X-Plex-Client-Identifier # name of the header, query parameter or cookie
    DeviceName: # arbitrary name for the security scheme
      description: Primary name for the device eg. `Plex Web (Chrome)`
      type: apiKey
      in: header # can be "header", "query" or "cookie"
      name: X-Plex-Device-Name # name of the header, query parameter or cookie
    Device: # arbitrary name for the security scheme
      description: |
        The type of device your application is running on
        Device name and or model number, eg `iPhone3,2`, `Motorola XOOMâ„¢`, `LG5200TV`
      type: apiKey
      in: header # can be "header", "query" or "cookie"
      name: X-Plex-Device # name of the header, query parameter or cookie
    PlatformVersion: # arbitrary name for the security scheme
      description: |
        Operating system version
        eg `4.3.1`, `10.6.7`, `3.2`
      type: apiKey
      in: header # can be "header", "query" or "cookie"
      name: X-Plex-Platform-Version # name of the header, query parameter or cookie
    Platform: # arbitrary name for the security scheme
      description: |
        Platform name 
        eg: `Web`, `iOS`, `MacOSX`, `Android`, `LG`
      type: apiKey
      in: header # can be "header", "query" or "cookie"
      name: X-Plex-Platform # name of the header, query parameter or cookie
    Product: # arbitrary name for the security scheme
      description: |
        Plex application name 
        eg: `Laika`, `Plex Media Server`, `Media Link`
      type: apiKey
      in: header # can be "header", "query" or "cookie"
      name: X-Plex-Product # name of the header, query parameter or cookie
    Version: # arbitrary name for the security scheme
      description: Plex application version number
      type: apiKey
      in: header # can be "header", "query" or "cookie"
      name: X-Plex-Version # name of the header, query parameter or cookie

paths:
  # Plex.tv API endpoints
  /companions:
    $ref: "./paths/companions.yaml"
  /geoip:
    $ref: "./paths/geoip.yaml"
  /home:
    $ref: "./paths/home.yaml"
  # /pins:
  #   $ref: "./paths/pins.yaml"
  /pins/{pinID}:
    $ref: "./paths/pins-id.yaml"
  /resources:
    $ref: "./paths/resources.yaml"
  /user:
    $ref: "./paths/user.yaml"
  /user/settings:
    $ref: "./paths/user-settings.yaml"
  /user/settings/opt_outs:
    $ref: "./paths/user-settings-opt_outs.yaml"

tags:
  - name: Activities
    description: |
      Activities are awesome. They provide a way to monitor and control asynchronous operations on the server. In order to receive real-time updates for activities, a client would normally subscribe via either EventSource or Websocket endpoints.
      Activities are associated with HTTP replies via a special `X-Plex-Activity` header which contains the UUID of the activity.
      Activities are optional cancellable. If cancellable, they may be cancelled via the `DELETE` endpoint. Other details:
      - They can contain a `progress` (from 0 to 100) marking the percent completion of the activity.
      - They must contain an `type` which is used by clients to distinguish the specific activity.
      - They may contain a `Context` object with attributes which associate the activity with various specific entities (items, libraries, etc.)
      - The may contain a `Response` object which attributes which represent the result of the asynchronous operation.
  - name: Authentication
    description: |
      API Calls regarding authentication for Plex Media Server
  - name: Butler
    description: |
      Butler is the task manager of the Plex Media Server Ecosystem.
  - name: Server
    description: |
      Operations against the Plex Media Server System.
  - name: Updater
    description: |
      This describes the API for searching and applying updates to the Plex Media Server.
      Updates to the status can be observed via the Event API.
  - name: Log
    description: |
      Submit logs to the Log Handler for Plex Media Server
  - name: Security
    description: |
      API Calls against Security for Plex Media Server
  - name: Library
    description: |
      API Calls interacting with Plex Media Server Libraries
  - name: Hubs
    description: |
      Hubs are a structured two-dimensional container for media, generally represented by multiple horizontal rows.
  - name: Playlists
    description: |
      Playlists are ordered collections of media. They can be dumb (just a list of media) or smart (based on a media query, such as "all albums from 2017"). 
      They can be organized in (optionally nesting) folders.
      Retrieving a playlist, or its items, will trigger a refresh of its metadata. 
      This may cause the duration and number of items to change.
  - name: Search
    description: |
      API Calls that perform search operations with Plex Media Server
  - name: User
    description: |
      API Calls that perform operations with Plex Media Server Users
